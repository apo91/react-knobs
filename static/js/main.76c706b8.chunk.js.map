{"version":3,"sources":["../../dist/index.es.js","quickDemoKnobPresets.js","examples.jsx","App.jsx","index.js","utils/useEventListener.js"],"names":["ThemeContext","react_default","a","createContext","knobColor","valueStrokeColor","headerTextColor","valueTextColor","headerFontSize","valueFontSize","knobStrokeWidth","valueStrokeWidth","defaultScale","useEventCallback","fn","ref","Object","react","current","apply","undefined","arguments","index_es_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","value","length","err","sliceIterator","TypeError","useGenericKnobStateAndEventHandlers","props","_useState","_useState2","isDragging","setIsDragging","_useState3","_useState4","dragStartValue","setDragStartValue","_useState5","_useState6","dragStartY","setDragStartY","_useState7","defaultValue","_useState8","uncontrolledValue","setUncontrolledValue","isUncontrolled","handleMouseUp","document","body","style","cursor","handleMouseMove","event","pivot","pad","newValue","Math","max","min","pageY","onChange","addEventListener","removeEventListener","handleDoubleClick","handleMouseDown","DEFAULT_SIZE","header","scale","theme","textAlign","color","fontSize","marginBottom","unselectable","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","centered","display","alignItems","justifyContent","FullonKnob","_useGenericKnobStateA","title","tooltip","formatter","floor","size","center","knobRadius","knobStrokeCircumference","PI","valueStrokeRadius","valueStrokeCircumference","strokeLineCap","createElement","width","height","onDoubleClick","onMouseDown","data-testid","r","cx","cy","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset","transform","x","y","dominantBaseline","textAnchor","MidlaneKnob","ConcentricKnob","BlindfoldKnob","radius","handColor","x1","y1","x2","y2","propTypes","prop_types_default","number","string","oneOf","func","quickDemoKnobPresets","Component","valueStrokeColors","examples","code","alert","useState","slicedToArray","state","setState","round","grid","gridGap","codeFontSize","useContext","setKnobStrokeWidth","setValueStrokeWidth","red","setRed","_useState9","_useState10","green","setGreen","_useState11","_useState12","blue","setBlue","themeWithValueStrokeColor","_ref","_ref2","g","b","_objectSpread","concat","customizedTheme","gridTemplateAreas","gridArea","Provider","AppContainer","styled","div","_templateObject","AppHeader","_templateObject2","AppBody","_templateObject3","AppFooter","footer","_templateObject4","TabsContainer","_templateObject5","Tab","_templateObject6","active","css","_templateObject7","KnobsContainer","_templateObject8","visible","KnobsGroup","_templateObject9","ExamplesContainer","_templateObject10","Centered","_templateObject11","ReactDOM","render","activeTab","setActiveTab","from","KNOB_PRESETS","random","knobValues","setKnobValues","eventName","handler","element","window","savedHandler","useRef","useEffect","eventListener","useEventListener","keyCode","preventDefault","onClick","map","objectWithoutProperties","key","j","assign","replace","index","newKnobValues","toConsumableArray","handleKnobProgressChange","EXAMPLES","Fragment","default_highlight","language","docco","getElementById"],"mappings":"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","file":"static/js/main.76c706b8.chunk.js","sourcesContent":["import React, { useMemo, useRef, useLayoutEffect, useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nvar ThemeContext = React.createContext({\n  knobColor: 'black',\n  valueStrokeColor: '#4580E6',\n  headerTextColor: 'black',\n  valueTextColor: 'black',\n  headerFontSize: 22,\n  valueFontSize: 20,\n  knobStrokeWidth: 12,\n  valueStrokeWidth: 6,\n  defaultScale: 1\n});\n\nfunction useEventCallback(fn) {\n  var ref = useRef();\n  useLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return useMemo(function () {\n    return function () {\n      return ref.current.apply(undefined, arguments);\n    };\n  }, []);\n}\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nfunction useGenericKnobStateAndEventHandlers(props) {\n  var _useState = useState(false),\n      _useState2 = slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = slicedToArray(_useState3, 2),\n      dragStartValue = _useState4[0],\n      setDragStartValue = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = slicedToArray(_useState5, 2),\n      dragStartY = _useState6[0],\n      setDragStartY = _useState6[1];\n\n  var _useState7 = useState(props.defaultValue || 0),\n      _useState8 = slicedToArray(_useState7, 2),\n      uncontrolledValue = _useState8[0],\n      setUncontrolledValue = _useState8[1];\n\n  var isUncontrolled = props.value === undefined;\n  var value = isUncontrolled ? uncontrolledValue : props.value;\n\n  var handleDoubleClick = function handleDoubleClick() {\n    var newValue = props.defaultValue || 0;\n\n    if (isUncontrolled) {\n      setUncontrolledValue(newValue);\n    }\n\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    document.body.style.cursor = 'none';\n    setIsDragging(true);\n    setDragStartValue(value);\n    setDragStartY(event.pageY);\n  };\n\n  var handleMouseUp = useEventCallback(function () {\n    document.body.style.cursor = 'default';\n    setIsDragging(false);\n  });\n  var handleMouseMove = useEventCallback(function (event) {\n    if (isDragging) {\n      var pivot = dragStartValue * 60;\n      var pad = 60 - pivot;\n      var newValue = (pivot + Math.max(-pivot, Math.min(pad, dragStartY - event.pageY))) / 60;\n\n      if (isUncontrolled) {\n        setUncontrolledValue(newValue);\n      }\n\n      if (props.onChange) {\n        props.onChange(newValue);\n      }\n    }\n  });\n  useEffect(function () {\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('mousemove', handleMouseMove);\n    return function () {\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [handleMouseUp, handleMouseMove]);\n  return {\n    value: value,\n    handleDoubleClick: handleDoubleClick,\n    handleMouseDown: handleMouseDown\n  };\n}\n\nvar DEFAULT_SIZE = 120;\n\nvar header = function header(scale, props, theme) {\n  return {\n    textAlign: 'center',\n    color: props.headerTextColor || theme.headerTextColor,\n    fontSize: (props.headerFontSize || theme.headerFontSize) * scale,\n    marginBottom: 8 * scale\n  };\n};\n\nvar unselectable = {\n  WebkitUserSelect: 'none',\n  MozUserSelect: 'none',\n  msUserSelect: 'none',\n  userSelect: 'none'\n};\nvar centered = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\n/**\r\n * FullonKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {number} [props.knobStrokeWidth] (theme) Width of the stroke of the knob contour\r\n * @param {number} [props.headerFontSize] (theme) Size of the knob header font\r\n * @param {number} [props.valueFontSize] (theme) Size of the value label font\r\n * @param {string} [props.knobColor] (theme) Color of the knob contour\r\n * @param {string} [props.valueStrokeColor] (theme) Color of the stroke of the value contour\r\n * @param {string} [props.valueTextColor] (theme) Color of the value label text\r\n * @param {('butt'|'round'|'square')} [props.strokeLineCap] (theme) Name of the line cap type used in value contour\r\n * @param {function} [props.formatter] Function taking value and returning text to display inside the knob\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\nfunction FullonKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n\n  var formatter = props.formatter || function (value) {\n    return Math.floor(value * 100) + '%';\n  };\n\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var knobStrokeWidth = (props.knobStrokeWidth || theme.knobStrokeWidth) * scale;\n  var knobRadius = size / 2 - knobStrokeWidth / 2;\n  var knobStrokeCircumference = 2 * Math.PI * knobRadius;\n  var valueStrokeWidth = knobStrokeWidth;\n  var valueStrokeRadius = knobRadius;\n  var valueStrokeCircumference = knobStrokeCircumference;\n  var strokeLineCap = props.strokeLineCap || 'butt';\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: knobRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.knobColor || theme.knobColor,\n    strokeWidth: knobStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: knobStrokeCircumference,\n    strokeDashoffset: knobStrokeCircumference * (0.25 + value * 0.75),\n    transform: 'rotate(' + (135 + value * 270) + ' ' + center + ' ' + center + ')'\n  }), React.createElement('circle', {\n    r: valueStrokeRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.valueStrokeColor || theme.valueStrokeColor,\n    strokeWidth: valueStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: valueStrokeCircumference,\n    strokeDashoffset: valueStrokeCircumference * (1 - value * 0.75),\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('text', {\n    x: '50%',\n    y: center,\n    fontSize: (props.valueFontSize || theme.valueFontSize) * scale,\n    fill: props.valueTextColor || theme.valueTextColor,\n    dominantBaseline: 'middle',\n    textAnchor: 'middle'\n  }, formatter(value)))));\n}\n\nFullonKnob.propTypes = {\n  value: PropTypes.number,\n  defaultValue: PropTypes.number,\n  scale: PropTypes.number,\n  title: PropTypes.string,\n  tooltip: PropTypes.string,\n  knobStrokeWidth: PropTypes.number,\n  headerFontSize: PropTypes.number,\n  valueFontSize: PropTypes.number,\n  knobColor: PropTypes.string,\n  valueStrokeColor: PropTypes.string,\n  valueTextColor: PropTypes.string,\n  strokeLineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n  formatter: PropTypes.func,\n  onChange: PropTypes.func\n};\n/**\r\n * MidlaneKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {number} [props.knobStrokeWidth] (theme) Width of the stroke of the knob contour\r\n * @param {number} [props.valueStrokeWidth] (theme) Width of the stroke of the value contour\r\n * @param {number} [props.headerFontSize] (theme) Size of the knob header font\r\n * @param {number} [props.valueFontSize] (theme) Size of the value label font\r\n * @param {string} [props.knobColor] (theme) Color of the knob contour\r\n * @param {string} [props.valueStrokeColor] (theme) Color of the stroke of the value contour\r\n * @param {string} [props.valueTextColor] (theme) Color of the value label text\r\n * @param {('butt'|'round'|'square')} [props.strokeLineCap] (theme) Name of the line cap type used in value contour\r\n * @param {function} [props.formatter] Function taking value and returning text to display inside the knob\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\nfunction MidlaneKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n\n  var formatter = props.formatter || function (value) {\n    return Math.floor(value * 100) + '%';\n  };\n\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var knobStrokeWidth = (props.knobStrokeWidth || theme.knobStrokeWidth) * scale;\n  var knobRadius = size / 2 - knobStrokeWidth / 2;\n  var knobStrokeCircumference = 2 * Math.PI * knobRadius;\n  var valueStrokeWidth = (props.valueStrokeWidth || theme.valueStrokeWidth) * scale;\n  var valueStrokeRadius = knobRadius;\n  var valueStrokeCircumference = knobStrokeCircumference;\n  var strokeLineCap = props.strokeLineCap || 'butt';\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: knobRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.knobColor || theme.knobColor,\n    strokeWidth: knobStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: knobStrokeCircumference,\n    strokeDashoffset: knobStrokeCircumference * 0.25,\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('circle', {\n    r: valueStrokeRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.valueStrokeColor || theme.valueStrokeColor,\n    strokeWidth: valueStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: valueStrokeCircumference,\n    strokeDashoffset: valueStrokeCircumference * (1 - value * 0.75),\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('text', {\n    x: '50%',\n    y: center,\n    fontSize: (props.valueFontSize || theme.valueFontSize) * scale,\n    fill: props.valueTextColor || theme.valueTextColor,\n    dominantBaseline: 'middle',\n    textAnchor: 'middle'\n  }, formatter(value)))));\n}\n\nMidlaneKnob.propTypes = {\n  value: PropTypes.number,\n  defaultValue: PropTypes.number,\n  scale: PropTypes.number,\n  title: PropTypes.string,\n  tooltip: PropTypes.string,\n  knobStrokeWidth: PropTypes.number,\n  valueStrokeWidth: PropTypes.number,\n  headerFontSize: PropTypes.number,\n  valueFontSize: PropTypes.number,\n  knobColor: PropTypes.string,\n  valueStrokeColor: PropTypes.string,\n  valueTextColor: PropTypes.string,\n  strokeLineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n  formatter: PropTypes.func,\n  onChange: PropTypes.func\n};\n/**\r\n * ConcentricKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {number} [props.knobStrokeWidth] (theme) Width of the stroke of the knob contour\r\n * @param {number} [props.valueStrokeWidth] (theme) Width of the stroke of the value contour\r\n * @param {number} [props.headerFontSize] (theme) Size of the knob header font\r\n * @param {number} [props.valueFontSize] (theme) Size of the value label font\r\n * @param {string} [props.knobColor] (theme) Color of the knob contour\r\n * @param {string} [props.valueStrokeColor] (theme) Color of the stroke of the value contour\r\n * @param {string} [props.valueTextColor] (theme) Color of the value label text\r\n * @param {function} [props.formatter] Function taking value and returning text to display inside the knob\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\nfunction ConcentricKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n\n  var formatter = props.formatter || function (value) {\n    return Math.floor(value * 100) + '%';\n  };\n\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var knobStrokeWidth = (props.knobStrokeWidth || theme.knobStrokeWidth) * scale;\n  var knobRadius = size / 2 - knobStrokeWidth / 2;\n  var knobStrokeCircumference = 2 * Math.PI * knobRadius;\n  var valueStrokeWidth = (props.valueStrokeWidth || theme.valueStrokeWidth) * scale;\n  var valueStrokeRadius = knobRadius + knobStrokeWidth * 0.25;\n  var valueStrokeCircumference = 2 * Math.PI * valueStrokeRadius;\n  var strokeLineCap = \"butt\";\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: knobRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.knobColor || theme.knobColor,\n    strokeWidth: knobStrokeWidth - 2,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: knobStrokeCircumference,\n    strokeDashoffset: knobStrokeCircumference * 0.25,\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('circle', {\n    r: valueStrokeRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.valueStrokeColor || theme.valueStrokeColor,\n    strokeWidth: valueStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: valueStrokeCircumference,\n    strokeDashoffset: valueStrokeCircumference * (1 - value * 0.75),\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('text', {\n    x: '50%',\n    y: center,\n    fontSize: (props.valueFontSize || theme.valueFontSize) * scale,\n    fill: props.valueTextColor || theme.valueTextColor,\n    dominantBaseline: 'middle',\n    textAnchor: 'middle'\n  }, formatter(value)))));\n}\n\nConcentricKnob.propTypes = {\n  value: PropTypes.number,\n  defaultValue: PropTypes.number,\n  scale: PropTypes.number,\n  title: PropTypes.string,\n  tooltip: PropTypes.string,\n  knobStrokeWidth: PropTypes.number,\n  valueStrokeWidth: PropTypes.number,\n  headerFontSize: PropTypes.number,\n  valueFontSize: PropTypes.number,\n  knobColor: PropTypes.string,\n  valueStrokeColor: PropTypes.string,\n  valueTextColor: PropTypes.string,\n  formatter: PropTypes.func,\n  onChange: PropTypes.func\n};\n/**\r\n * BlindfoldKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {number} [props.headerFontSize] (theme) Size of the knob header font\r\n * @param {string} [props.knobColor] (theme) Color of the knob contour\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\nfunction BlindfoldKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var radius = size / 2;\n  var handColor = props.handColor || 'white';\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: radius,\n    cx: center,\n    cy: center,\n    fill: props.knobColor || theme.knobColor,\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('line', {\n    x1: center,\n    y1: center,\n    x2: center,\n    y2: center - radius,\n    transform: 'rotate(' + (-135 + value * 270) + ' ' + center + ' ' + center + ')',\n    stroke: handColor,\n    strokeWidth: 2\n  }))));\n}\n\nBlindfoldKnob.propTypes = {\n  value: PropTypes.number,\n  defaultValue: PropTypes.number,\n  scale: PropTypes.number,\n  title: PropTypes.string,\n  tooltip: PropTypes.string,\n  headerFontSize: PropTypes.number,\n  knobColor: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport { FullonKnob, MidlaneKnob, ConcentricKnob, BlindfoldKnob, ThemeContext };","/* eslint no-useless-concat: \"off\" */\r\n\r\nimport { FullonKnob, MidlaneKnob, ConcentricKnob, BlindfoldKnob } from 'react-knobs';\r\n\r\nexport default [\r\n  {\r\n    Component: FullonKnob,\r\n    title: 'Fb',\r\n    valueStrokeColors: ['#669EFF', '#4580E6', '#2965CC'],\r\n    strokeLineCap: 'butt',\r\n    tooltip:\r\n      '<FullonKnob ' + '\\n' +\r\n      '  title=\"Fb\"' + '\\n' +\r\n      '  scale={{scale}}' + '\\n' +\r\n      '  valueStrokeColor=\"{valueStrokeColor}\"' + '\\n' +\r\n      '  strokeLineCap=\"butt\"' + '\\n' +\r\n      '/>',\r\n  },\r\n  {\r\n    Component: FullonKnob,\r\n    title: 'Fr',\r\n    valueStrokeColors: ['#AD99FF', '#9179F2', '#7157D9'],\r\n    strokeLineCap: 'round',\r\n    tooltip:\r\n      '<FullonKnob ' + '\\n' +\r\n      '  title=\"Fr\"' + '\\n' +\r\n      '  scale={{scale}}' + '\\n' +\r\n      '  valueStrokeColor=\"{valueStrokeColor}\"' + '\\n' +\r\n      '  strokeLineCap=\"round\"' + '\\n' +\r\n      '/>',\r\n  },\r\n  {\r\n    Component: MidlaneKnob,\r\n    title: 'Mb',\r\n    valueStrokeColors: ['#FFC940', '#F2B824', '#D99E0B'],\r\n    strokeLineCap: 'butt',\r\n    tooltip:\r\n      '<MidlaneKnob ' + '\\n' +\r\n      '  title=\"Mb\"' + '\\n' +\r\n      '  scale={{scale}}' + '\\n' +\r\n      '  valueStrokeColor=\"{valueStrokeColor}\"' + '\\n' +\r\n      '  strokeLineCap=\"butt\"' + '\\n' +\r\n      '/>',\r\n  },\r\n  {\r\n    Component: MidlaneKnob,\r\n    title: 'Mr',\r\n    valueStrokeColors: ['#D1F26D', '#B6D94C', '#9BBF30'],\r\n    strokeLineCap: 'round',\r\n    tooltip:\r\n      '<MidlaneKnob ' + '\\n' +\r\n      '  title=\"Mr\"' + '\\n' +\r\n      '  scale={{scale}}' + '\\n' +\r\n      '  valueStrokeColor=\"{valueStrokeColor}\"' + '\\n' +\r\n      '  strokeLineCap=\"round\"' + '\\n' +\r\n      '/>',\r\n  },\r\n  {\r\n    Component: ConcentricKnob,\r\n    title: 'Co',\r\n    valueStrokeColors: ['#2EE6D6', '#14CCBD', '#00B3A4'],\r\n    tooltip:\r\n      '<ConcentricKnob ' + '\\n' +\r\n      '  title=\"Co\"' + '\\n' +\r\n      '  scale={{scale}}' + '\\n' +\r\n      '  valueStrokeColor=\"{valueStrokeColor}\"' + '\\n' +\r\n      '/>',\r\n  },\r\n  {\r\n    Component: BlindfoldKnob,\r\n    title: 'Bl',\r\n    valueStrokeColors: ['#FFC940', '#F2B824', '#D99E0B'],\r\n    tooltip:\r\n      '<BlindfoldKnob ' + '\\n' +\r\n      '  title=\"Bl\"' + '\\n' +\r\n      '  scale={{scale}}' + '\\n' +\r\n      '/>',\r\n  },\r\n];\r\n","/* eslint no-useless-concat: \"off\" */\r\n/* eslint no-template-curly-in-string: \"off\" */\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { FullonKnob, MidlaneKnob, ConcentricKnob, BlindfoldKnob, ThemeContext } from 'react-knobs';\r\n\r\nexport default [\r\n  {\r\n    code:\r\n      '// Knob in uncontrolled mode' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <FullonKnob' + '\\n' +\r\n      '      defaultValue={0.4}' + '\\n' +\r\n      '      onChange={(newValue) =>' + '\\n' +\r\n      '        newValue > 0.75 && alert(\\'> 75% !\\')}' + '\\n' +\r\n      '    />' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => (\r\n      <FullonKnob\r\n        defaultValue={0.4}\r\n        onChange={(newValue) =>\r\n          newValue > 0.75 && alert('> 75% !')\r\n        }\r\n      />\r\n    )\r\n  },\r\n  {\r\n    code:\r\n      '// Knob in controlled mode' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  const [state, setState] = useState(0.33);' + '\\n' +\r\n      '  return(' + '\\n' +\r\n      '    <FullonKnob' + '\\n' +\r\n      '      value={state}' + '\\n' +\r\n      '      onChange={(newValue) => setState(newValue)}' + '\\n' +\r\n      '    />' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => {\r\n      const [state, setState] = useState(0.33);\r\n      return (\r\n        <FullonKnob\r\n          value={state}\r\n          onChange={(newValue) => setState(newValue)}\r\n        />\r\n      );\r\n    }\r\n  },\r\n  {\r\n    code:\r\n      '// Knob with title and value formatter' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <FullonKnob' + '\\n' +\r\n      '      title=\"Volume\"' + '\\n' +\r\n      '      defaultValue={0.825}' + '\\n' +\r\n      '      formatter={(value) =>' + '\\n' +\r\n      '        value < 0.01' + '\\n' +\r\n      '          ? \\'-inf\\'' + '\\n' +\r\n      '          : Math.round(-64 + value * 70) + \\' dB\\'' + '\\n' +\r\n      '      }' + '\\n' +\r\n      '    />' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => (\r\n      <FullonKnob\r\n        title=\"Volume\"\r\n        defaultValue={0.825}\r\n        formatter={(value) =>\r\n          value < 0.01\r\n            ? '-inf'\r\n            : Math.round(-64 + value * 70) + ' dB'\r\n        }\r\n      />\r\n    )\r\n  },\r\n  {\r\n    code:\r\n      '// Other knob types' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  const containerStyle = {' + '\\n' +\r\n      '    display: \\'grid\\',' + '\\n' +\r\n      '    grid: \\'auto / auto auto auto\\',' + '\\n' +\r\n      '    gridGap: 3' + '\\n' +\r\n      '  };' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <div style={containerStyle}>' + '\\n' +\r\n      '      <MidlaneKnob scale={0.5} defaultValue={0.3} />' + '\\n' +\r\n      '      <ConcentricKnob scale={0.5} defaultValue={0.5} />' + '\\n' +\r\n      '      <BlindfoldKnob scale={0.5} defaultValue={0.7} />' + '\\n' +\r\n      '    </div>' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => {\r\n      const containerStyle = {\r\n        display: 'grid',\r\n        grid: 'auto / auto auto auto',\r\n        gridGap: 3\r\n      };\r\n      return (\r\n        <div style={containerStyle}>\r\n          <MidlaneKnob scale={0.5} defaultValue={0.3} />\r\n          <ConcentricKnob scale={0.5} defaultValue={0.5} />\r\n          <BlindfoldKnob scale={0.5} defaultValue={0.7} />\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    code:\r\n      '// An ultimate example' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  const theme = useContext(ThemeContext);' + '\\n' +\r\n      '  const [knobStrokeWidth, setKnobStrokeWidth] = useState(1);' + '\\n' +\r\n      '  const [valueStrokeWidth, setValueStrokeWidth] = useState(0);' + '\\n' +\r\n      '  const [red, setRed] = useState(1);' + '\\n' +\r\n      '  const [green, setGreen] = useState(1);' + '\\n' +\r\n      '  const [blue, setBlue] = useState(0.5);' + '\\n' +\r\n      '  const themeWithValueStrokeColor = ([r, g, b], theme) => ({' + '\\n' +\r\n      '    ...theme,' + '\\n' +\r\n      '    valueStrokeColor: `rgb(${r * 255}, ${g * 255}, ${b * 255})`,' + '\\n' +\r\n      '  });' + '\\n' +\r\n      '  const customizedTheme = themeWithValueStrokeColor([red, green, blue], {' + '\\n' +\r\n      '    ...theme,' + '\\n' +\r\n      '    knobStrokeWidth: 6 + 12 * knobStrokeWidth,' + '\\n' +\r\n      '    valueStrokeWidth: 3 + 6 * valueStrokeWidth,' + '\\n' +\r\n      '  });' + '\\n' +\r\n      '  const containerStyle = {' + '\\n' +\r\n      '    display: \\'grid\\',' + '\\n' +\r\n      '    gridTemplateAreas:' + '\\n' +\r\n      '      \\'\". k   k   k   k   k   k   .\"\\' + \\'\\\\n\\' +' + '\\n' +\r\n      '      \\'\". ksw ksw ksw vsw vsw vsw .\"\\' + \\'\\\\n\\' +' + '\\n' +\r\n      '      \\'\". r   r   g   g   b   b   .\"\\' + \\'\\\\n\\',' + '\\n' +\r\n      '    gridGap: 8' + '\\n' +\r\n      '  };' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <div style={containerStyle}>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'k\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={customizedTheme}>' + '\\n' +\r\n      '          <MidlaneKnob defaultValue={0.5} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'ksw\\' }}>' + '\\n' +\r\n      '        <BlindfoldKnob title=\"Knob Stroke\" scale={0.5} value={knobStrokeWidth} onChange={setKnobStrokeWidth} />' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'vsw\\' }}>' + '\\n' +\r\n      '        <BlindfoldKnob title=\"Value Stroke\" scale={0.5} value={valueStrokeWidth} onChange={setValueStrokeWidth} />' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'r\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={themeWithValueStrokeColor([0.5 + 0.5 * red, 0, 0], theme)}>' + '\\n' +\r\n      '          <FullonKnob title=\"R\" scale={0.33} value={red} onChange={setRed} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'g\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0.5 + 0.5 * green, 0], theme)}>' + '\\n' +\r\n      '          <FullonKnob title=\"G\" scale={0.33} value={green} onChange={setGreen} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'b\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0, 0.5 + 0.5 * blue], theme)}>' + '\\n' +\r\n      '          <FullonKnob title=\"B\" scale={0.33} value={blue} onChange={setBlue} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '    </div>' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    codeFontSize: 12,\r\n    Component: () => {\r\n      const theme = useContext(ThemeContext);\r\n      const [knobStrokeWidth, setKnobStrokeWidth] = useState(1);\r\n      const [valueStrokeWidth, setValueStrokeWidth] = useState(0);\r\n      const [red, setRed] = useState(1);\r\n      const [green, setGreen] = useState(1);\r\n      const [blue, setBlue] = useState(0.5);\r\n      const themeWithValueStrokeColor = ([r, g, b], theme) => ({\r\n        ...theme,\r\n        valueStrokeColor: `rgb(${r * 255}, ${g * 255}, ${b * 255})`,\r\n      });\r\n      const customizedTheme = themeWithValueStrokeColor([red, green, blue], {\r\n        ...theme,\r\n        knobStrokeWidth: 6 + 12 * knobStrokeWidth,\r\n        valueStrokeWidth: 3 + 6 * valueStrokeWidth,\r\n      });\r\n      const containerStyle = {\r\n        display: 'grid',\r\n        gridTemplateAreas:\r\n          '\". k   k   k   k   k   k   .\"' + '\\n' +\r\n          '\". ksw ksw ksw vsw vsw vsw .\"' + '\\n' +\r\n          '\". r   r   g   g   b   b   .\"' + '\\n',\r\n        gridGap: 8\r\n      };\r\n      return (\r\n        <div style={containerStyle}>\r\n          <div style={{ gridArea: 'k' }}>\r\n            <ThemeContext.Provider value={customizedTheme}>\r\n              <MidlaneKnob defaultValue={0.5} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n          <div style={{ gridArea: 'ksw' }}>\r\n            <BlindfoldKnob title=\"Knob Stroke\" scale={0.5} value={knobStrokeWidth} onChange={setKnobStrokeWidth} />\r\n          </div>\r\n          <div style={{ gridArea: 'vsw' }}>\r\n            <BlindfoldKnob title=\"Value Stroke\" scale={0.5} value={valueStrokeWidth} onChange={setValueStrokeWidth} />\r\n          </div>\r\n          <div style={{ gridArea: 'r' }}>\r\n            <ThemeContext.Provider value={themeWithValueStrokeColor([0.5 + 0.5 * red, 0, 0], theme)}>\r\n              <FullonKnob title=\"R\" scale={0.33} value={red} onChange={setRed} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n          <div style={{ gridArea: 'g' }}>\r\n            <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0.5 + 0.5 * green, 0], theme)}>\r\n              <FullonKnob title=\"G\" scale={0.33} value={green} onChange={setGreen} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n          <div style={{ gridArea: 'b' }}>\r\n            <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0, 0.5 + 0.5 * blue], theme)}>\r\n              <FullonKnob title=\"B\" scale={0.33} value={blue} onChange={setBlue} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport useEventListener from './utils/useEventListener';\r\nimport KNOB_PRESETS from './quickDemoKnobPresets';\r\nimport EXAMPLES from './examples';\r\n\r\nconst AppContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 800px auto;\r\n  grid-template-rows: 100px auto 60px;\r\n  grid-template-areas:\r\n    \". header .\"\r\n    \". main   .\"\r\n    \". footer .\";\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #193540;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n`;\r\n\r\nconst AppHeader = styled.header`\r\n  grid-area: header;\r\n  align-self: end;\r\n  font-size: 20pt;\r\n  padding-bottom: 10pt;\r\n  color: #5F7884;\r\n`;\r\n\r\nconst AppBody = styled.div`\r\n  display: grid;\r\n  grid: 32pt auto / 100%;\r\n  grid-area: main;\r\n  background-color: #899EAA;\r\n  overflow-y: hidden;\r\n  height: 100%;\r\n`;\r\n\r\nconst AppFooter = styled.footer`\r\n  grid-area: footer;\r\n  text-align: center;\r\n  font-size: 14pt;\r\n  padding-top: 8pt;\r\n  color: #405D64;\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  display: grid;\r\n  grid: 32pt / 50% 50%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14pt;\r\n  color: #899EAA;\r\n  background-color: #405D64;\r\n  ${props => props.active && css`\r\n    color: #193540;\r\n    background-color: #5F7884;\r\n    text-decoration: underline;\r\n  `}\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #193540;\r\n  }\r\n`;\r\n\r\nconst KnobsContainer = styled.div`\r\n  display: ${props => props.visible ? 'grid' : 'none'};\r\n  grid: 33% 33% 33% / 50% 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 60px;\r\n  box-sizing: border-box;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst KnobsGroup = styled.div`\r\n  display: grid;\r\n  grid: auto / auto auto auto auto;\r\n  grid-gap: 5px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ExamplesContainer = styled.div`\r\n  display: ${props => props.visible ? 'grid' : 'none'};\r\n  grid: auto / 240px 500px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  pre {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst Centered = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function () {\r\n  const [activeTab, setActiveTab] = useState('quick-demo');\r\n  const [knobValues, setKnobValues] = useState(\r\n    Array.from({ length: KNOB_PRESETS.length }, () => Math.random())\r\n  );\r\n\r\n  useEventListener('keydown', (event) => {\r\n    if (event.keyCode === 9) { // TAB\r\n      event.preventDefault();\r\n      setActiveTab(\r\n        activeTab === 'quick-demo'\r\n          ? 'code-examples'\r\n          : 'quick-demo'\r\n      );\r\n    }\r\n  });\r\n\r\n  const handleKnobProgressChange = (index, value) => {\r\n    const newKnobValues = [...knobValues];\r\n    newKnobValues[index] = value;\r\n    setKnobValues(newKnobValues);\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <AppHeader>\r\n        react-knobs-demo\r\n      </AppHeader>\r\n      <AppBody>\r\n        <TabsContainer>\r\n          <Tab\r\n            active={activeTab === 'quick-demo'}\r\n            onClick={() => setActiveTab('quick-demo')}\r\n          >\r\n            Quick Demo\r\n          </Tab>\r\n          <Tab\r\n            active={activeTab === 'code-examples'}\r\n            onClick={() => setActiveTab('code-examples')}\r\n          >\r\n            Code Examples\r\n          </Tab>\r\n        </TabsContainer>\r\n        <KnobsContainer visible={activeTab === 'quick-demo'}>\r\n          {KNOB_PRESETS.map(({ Component, valueStrokeColors, tooltip, ...props }, i) => (\r\n            <KnobsGroup key={i}>\r\n              {[0.33, 0.66, 1].map((scale, j) => (\r\n                <Component\r\n                  key={j}\r\n                  {...props}\r\n                  tooltip={tooltip\r\n                    .replace('{valueStrokeColor}', valueStrokeColors[j])\r\n                    .replace('{scale}', scale)}\r\n                  scale={scale}\r\n                  valueStrokeColor={valueStrokeColors[j]}\r\n                  value={knobValues[i]}\r\n                  onChange={(value) => handleKnobProgressChange(i, value)}\r\n                />)\r\n              )}\r\n            </KnobsGroup>\r\n          ))}\r\n        </KnobsContainer>\r\n        <ExamplesContainer visible={activeTab === 'code-examples'}>\r\n          {EXAMPLES.map(({ code, codeFontSize, Component }, index) => (\r\n            <React.Fragment key={index}>\r\n              <Centered>\r\n                <Component />\r\n              </Centered>\r\n              <div style={{ fontSize: codeFontSize || 14 }}>\r\n                <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n                  {code}\r\n                </SyntaxHighlighter>\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n        </ExamplesContainer>\r\n      </AppBody>\r\n      <AppFooter>\r\n        Andrii Polishchuk (c) 2019\r\n      </AppFooter>\r\n    </AppContainer>\r\n  );\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App.jsx'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useEventListener(eventName, handler, element = window) {\r\n  const savedHandler = useRef();\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n  useEffect(() => {\r\n    const isSupported = element && element.addEventListener;\r\n    if (!isSupported) return;\r\n    const eventListener = event => savedHandler.current(event);\r\n    element.addEventListener(eventName, eventListener);\r\n    return () => {\r\n      element.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element]);\r\n};\r\n"],"sourceRoot":""}