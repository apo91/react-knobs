{"version":3,"sources":["../../dist/index.es.js","examples.jsx","App.jsx","index.js","utils/useEventListener.js"],"names":["ThemeContext","createContext","knobColor","valueStrokeColor","headerTextColor","valueTextColor","headerFontSize","valueFontSize","knobStrokeWidth","valueStrokeWidth","defaultScale","useEventCallback","fn","ref","current","apply","undefined","arguments","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","value","length","err","sliceIterator","TypeError","useGenericKnobStateAndEventHandlers","props","_useState","_useState2","isDragging","setIsDragging","_useState3","_useState4","dragStartValue","setDragStartValue","_useState5","_useState6","dragStartY","setDragStartY","_useState7","defaultValue","_useState8","uncontrolledValue","setUncontrolledValue","isUncontrolled","handleMouseUp","document","body","style","cursor","handleMouseMove","event","pivot","pad","newValue","Math","max","min","pageY","onChange","addEventListener","removeEventListener","handleDoubleClick","handleMouseDown","DEFAULT_SIZE","header","scale","theme","textAlign","color","fontSize","marginBottom","unselectable","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","centered","display","alignItems","justifyContent","FullonKnob","_useGenericKnobStateA","title","tooltip","formatter","floor","size","center","knobRadius","knobStrokeCircumference","PI","valueStrokeRadius","valueStrokeCircumference","strokeLineCap","createElement","width","height","onDoubleClick","onMouseDown","r","cx","cy","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset","transform","x","y","dominantBaseline","textAnchor","MidlaneKnob","ConcentricKnob","BlindfoldKnob","radius","handColor","x1","y1","x2","y2","code","Component","alert","useState","state","setState","round","grid","gridGap","codeFontSize","useContext","setKnobStrokeWidth","setValueStrokeWidth","red","setRed","green","setGreen","blue","setBlue","themeWithValueStrokeColor","g","b","customizedTheme","gridTemplateAreas","gridArea","Provider","KNOB_PRESETS","valueStrokeColors","AppContainer","styled","div","AppHeader","AppBody","AppFooter","footer","TabsContainer","Tab","active","css","KnobsContainer","visible","KnobsGroup","ExamplesContainer","Centered","ReactDOM","render","activeTab","setActiveTab","from","random","knobValues","setKnobValues","eventName","handler","element","window","savedHandler","useRef","useEffect","eventListener","useEventListener","keyCode","preventDefault","onClick","map","key","j","index","newKnobValues","handleKnobProgressChange","examples","Fragment","language","docco","getElementById"],"mappings":"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","file":"static/js/main.51f77874.chunk.js","sourcesContent":["import React, { useMemo, useRef, useLayoutEffect, useState, useEffect, useContext } from 'react';\nvar ThemeContext = React.createContext({\n  knobColor: 'black',\n  valueStrokeColor: '#4580E6',\n  headerTextColor: 'black',\n  valueTextColor: 'black',\n  headerFontSize: 22,\n  valueFontSize: 20,\n  knobStrokeWidth: 12,\n  valueStrokeWidth: 6,\n  defaultScale: 1\n});\n\nfunction useEventCallback(fn) {\n  var ref = useRef();\n  useLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return useMemo(function () {\n    return function () {\n      return ref.current.apply(undefined, arguments);\n    };\n  }, []);\n}\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nfunction useGenericKnobStateAndEventHandlers(props) {\n  var _useState = useState(false),\n      _useState2 = slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      setIsDragging = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = slicedToArray(_useState3, 2),\n      dragStartValue = _useState4[0],\n      setDragStartValue = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = slicedToArray(_useState5, 2),\n      dragStartY = _useState6[0],\n      setDragStartY = _useState6[1];\n\n  var _useState7 = useState(props.defaultValue || 0),\n      _useState8 = slicedToArray(_useState7, 2),\n      uncontrolledValue = _useState8[0],\n      setUncontrolledValue = _useState8[1];\n\n  var isUncontrolled = props.value === undefined;\n  var value = isUncontrolled ? uncontrolledValue : props.value;\n\n  var handleDoubleClick = function handleDoubleClick() {\n    var newValue = props.defaultValue || 0;\n\n    if (isUncontrolled) {\n      setUncontrolledValue(newValue);\n    }\n\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    document.body.style.cursor = 'none';\n    setIsDragging(true);\n    setDragStartValue(value);\n    setDragStartY(event.pageY);\n  };\n\n  var handleMouseUp = useEventCallback(function () {\n    document.body.style.cursor = 'default';\n    setIsDragging(false);\n  });\n  var handleMouseMove = useEventCallback(function (event) {\n    if (isDragging) {\n      var pivot = dragStartValue * 60;\n      var pad = 60 - pivot;\n      var newValue = (pivot + Math.max(-pivot, Math.min(pad, dragStartY - event.pageY))) / 60;\n\n      if (isUncontrolled) {\n        setUncontrolledValue(newValue);\n      }\n\n      if (props.onChange) {\n        props.onChange(newValue);\n      }\n    }\n  });\n  useEffect(function () {\n    document.addEventListener('mouseup', handleMouseUp);\n    document.addEventListener('mousemove', handleMouseMove);\n    return function () {\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [handleMouseUp, handleMouseMove]);\n  return {\n    value: value,\n    handleDoubleClick: handleDoubleClick,\n    handleMouseDown: handleMouseDown\n  };\n}\n\nvar DEFAULT_SIZE = 120;\n\nvar header = function header(scale, props, theme) {\n  return {\n    textAlign: 'center',\n    color: props.headerTextColor || theme.headerTextColor,\n    fontSize: (props.headerFontSize || theme.headerFontSize) * scale,\n    marginBottom: 8 * scale\n  };\n};\n\nvar unselectable = {\n  WebkitUserSelect: 'none',\n  MozUserSelect: 'none',\n  msUserSelect: 'none',\n  userSelect: 'none'\n};\nvar centered = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\n/**\r\n * FullonKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {('butt'|'round'|'square')} [props.strokeLineCap] Name of the line cap type used in value contour\r\n * @param {function} [props.formatter] Function taking value and returning text to display inside the knob\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\nfunction FullonKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n\n  var formatter = props.formatter || function (value) {\n    return Math.floor(value * 100) + '%';\n  };\n\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var knobStrokeWidth = (props.knobStrokeWidth || theme.knobStrokeWidth) * scale;\n  var knobRadius = size / 2 - knobStrokeWidth / 2;\n  var knobStrokeCircumference = 2 * Math.PI * knobRadius;\n  var valueStrokeWidth = knobStrokeWidth;\n  var valueStrokeRadius = knobRadius;\n  var valueStrokeCircumference = knobStrokeCircumference;\n  var strokeLineCap = props.strokeLineCap || 'butt';\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: knobRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.knobColor || theme.knobColor,\n    strokeWidth: knobStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: knobStrokeCircumference,\n    strokeDashoffset: knobStrokeCircumference * (0.25 + value * 0.75),\n    transform: 'rotate(' + (135 + value * 270) + ' ' + center + ' ' + center + ')'\n  }), React.createElement('circle', {\n    r: valueStrokeRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.valueStrokeColor || theme.valueStrokeColor,\n    strokeWidth: valueStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: valueStrokeCircumference,\n    strokeDashoffset: valueStrokeCircumference * (1 - value * 0.75),\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('text', {\n    x: '50%',\n    y: center,\n    fontSize: (props.valueFontSize || theme.valueFontSize) * scale,\n    fill: props.valueTextColor || theme.valueTextColor,\n    dominantBaseline: 'middle',\n    textAnchor: 'middle'\n  }, formatter(value)))));\n}\n/**\r\n * MidlaneKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {('butt'|'round'|'square')} [props.strokeLineCap] Name of the line cap type used in value contour\r\n * @param {function} [props.formatter] Function taking value and returning text to display inside the knob\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\n\nfunction MidlaneKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n\n  var formatter = props.formatter || function (value) {\n    return Math.floor(value * 100) + '%';\n  };\n\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var knobStrokeWidth = (props.knobStrokeWidth || theme.knobStrokeWidth) * scale;\n  var knobRadius = size / 2 - knobStrokeWidth / 2;\n  var knobStrokeCircumference = 2 * Math.PI * knobRadius;\n  var valueStrokeWidth = (props.valueStrokeWidth || theme.valueStrokeWidth) * scale;\n  var valueStrokeRadius = knobRadius;\n  var valueStrokeCircumference = knobStrokeCircumference;\n  var strokeLineCap = props.strokeLineCap || 'butt';\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: knobRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.knobColor || theme.knobColor,\n    strokeWidth: knobStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: knobStrokeCircumference,\n    strokeDashoffset: knobStrokeCircumference * 0.25,\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('circle', {\n    r: valueStrokeRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.valueStrokeColor || theme.valueStrokeColor,\n    strokeWidth: valueStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: valueStrokeCircumference,\n    strokeDashoffset: valueStrokeCircumference * (1 - value * 0.75),\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('text', {\n    x: '50%',\n    y: center,\n    fontSize: (props.valueFontSize || theme.valueFontSize) * scale,\n    fill: props.valueTextColor || theme.valueTextColor,\n    dominantBaseline: 'middle',\n    textAnchor: 'middle'\n  }, formatter(value)))));\n}\n/**\r\n * ConcentricKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {function} [props.formatter] Function taking value and returning text to display inside the knob\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\n\nfunction ConcentricKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n\n  var formatter = props.formatter || function (value) {\n    return Math.floor(value * 100) + '%';\n  };\n\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var knobStrokeWidth = (props.knobStrokeWidth || theme.knobStrokeWidth) * scale;\n  var knobRadius = size / 2 - knobStrokeWidth / 2;\n  var knobStrokeCircumference = 2 * Math.PI * knobRadius;\n  var valueStrokeWidth = (props.valueStrokeWidth || theme.valueStrokeWidth) * scale;\n  var valueStrokeRadius = knobRadius + knobStrokeWidth * 0.25;\n  var valueStrokeCircumference = 2 * Math.PI * valueStrokeRadius;\n  var strokeLineCap = \"butt\";\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: knobRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.knobColor || theme.knobColor,\n    strokeWidth: knobStrokeWidth - 2,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: knobStrokeCircumference,\n    strokeDashoffset: knobStrokeCircumference * 0.25,\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('circle', {\n    r: valueStrokeRadius,\n    cx: center,\n    cy: center,\n    fill: 'transparent',\n    stroke: props.valueStrokeColor || theme.valueStrokeColor,\n    strokeWidth: valueStrokeWidth,\n    strokeLinecap: strokeLineCap,\n    strokeDasharray: valueStrokeCircumference,\n    strokeDashoffset: valueStrokeCircumference * (1 - value * 0.75),\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('text', {\n    x: '50%',\n    y: center,\n    fontSize: (props.valueFontSize || theme.valueFontSize) * scale,\n    fill: props.valueTextColor || theme.valueTextColor,\n    dominantBaseline: 'middle',\n    textAnchor: 'middle'\n  }, formatter(value)))));\n}\n/**\r\n * BlindfoldKnob component\r\n * @param {object} props Component props\r\n * @param {number} props.value Value of the parameter controlled by knob\r\n * @param {number} props.defaultValue Default value of the parameter controlled by knob (uncontrolled mode)\r\n * @param {number} [props.scale] Scale multiplier for layout and fonts\r\n * @param {string} [props.title] Title of the parameter controlled by knob\r\n * @param {string} [props.tooltip] Text to show on hover\r\n * @param {function} props.onChange Callback called with a new value when the knob is rotated\r\n */\n\n\nfunction BlindfoldKnob(props) {\n  var theme = useContext(ThemeContext);\n\n  var _useGenericKnobStateA = useGenericKnobStateAndEventHandlers(props),\n      value = _useGenericKnobStateA.value,\n      handleDoubleClick = _useGenericKnobStateA.handleDoubleClick,\n      handleMouseDown = _useGenericKnobStateA.handleMouseDown;\n\n  var title = props.title;\n  var tooltip = props.tooltip;\n  var scale = theme.defaultScale * (props.scale == null ? 1 : props.scale);\n  var size = DEFAULT_SIZE * scale;\n  var center = size / 2;\n  var radius = size / 2;\n  var handColor = props.handColor || 'white';\n  return React.createElement('div', null, React.createElement('header', {\n    style: header(scale, props, theme)\n  }, title), React.createElement('div', {\n    style: centered\n  }, React.createElement('svg', {\n    width: size,\n    height: size,\n    onDoubleClick: handleDoubleClick,\n    onMouseDown: handleMouseDown,\n    style: unselectable,\n    'data-testid': 'knob'\n  }, React.createElement('title', null, tooltip), React.createElement('circle', {\n    r: radius,\n    cx: center,\n    cy: center,\n    fill: props.knobColor || theme.knobColor,\n    transform: 'rotate(135 ' + center + ' ' + center + ')'\n  }), React.createElement('line', {\n    x1: center,\n    y1: center,\n    x2: center,\n    y2: center - radius,\n    transform: 'rotate(' + (-135 + value * 270) + ' ' + center + ' ' + center + ')',\n    stroke: handColor,\n    strokeWidth: 2\n  }))));\n}\n\nvar index = {\n  FullonKnob: FullonKnob,\n  MidlaneKnob: MidlaneKnob,\n  ConcentricKnob: ConcentricKnob,\n  BlindfoldKnob: BlindfoldKnob,\n  ThemeContext: ThemeContext\n};\nexport default index;\nexport { FullonKnob, MidlaneKnob, ConcentricKnob, BlindfoldKnob, ThemeContext };","/* eslint no-useless-concat: \"off\" */\r\n/* eslint no-template-curly-in-string: \"off\" */\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { FullonKnob, MidlaneKnob, ConcentricKnob, BlindfoldKnob, ThemeContext } from 'react-knobs';\r\n\r\nexport default [\r\n  {\r\n    code:\r\n      '// Knob in uncontrolled mode' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <FullonKnob' + '\\n' +\r\n      '      defaultValue={0.4}' + '\\n' +\r\n      '      onChange={(newValue) =>' + '\\n' +\r\n      '        newValue > 0.75 && alert(\\'> 75% !\\')}' + '\\n' +\r\n      '    />' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => (\r\n      <FullonKnob\r\n        defaultValue={0.4}\r\n        onChange={(newValue) =>\r\n          newValue > 0.75 && alert('> 75% !')\r\n        }\r\n      />\r\n    )\r\n  },\r\n  {\r\n    code:\r\n      '// Knob in controlled mode' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  const [state, setState] = useState(0.33);' + '\\n' +\r\n      '  return(' + '\\n' +\r\n      '    <FullonKnob' + '\\n' +\r\n      '      value={state}' + '\\n' +\r\n      '      onChange={(newValue) => setState(newValue)}' + '\\n' +\r\n      '    />' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => {\r\n      const [state, setState] = useState(0.33);\r\n      return (\r\n        <FullonKnob\r\n          value={state}\r\n          onChange={(newValue) => setState(newValue)}\r\n        />\r\n      );\r\n    }\r\n  },\r\n  {\r\n    code:\r\n      '// Knob with title and value formatter' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <FullonKnob' + '\\n' +\r\n      '      title=\"Volume\"' + '\\n' +\r\n      '      defaultValue={0.825}' + '\\n' +\r\n      '      formatter={(value) =>' + '\\n' +\r\n      '        value < 0.01' + '\\n' +\r\n      '          ? \\'-inf\\'' + '\\n' +\r\n      '          : Math.round(-64 + value * 70) + \\' dB\\'' + '\\n' +\r\n      '      }' + '\\n' +\r\n      '    />' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => (\r\n      <FullonKnob\r\n        title=\"Volume\"\r\n        defaultValue={0.825}\r\n        formatter={(value) =>\r\n          value < 0.01\r\n            ? '-inf'\r\n            : Math.round(-64 + value * 70) + ' dB'\r\n        }\r\n      />\r\n    )\r\n  },\r\n  {\r\n    code:\r\n      '// Other knob types' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  const containerStyle = {' + '\\n' +\r\n      '    display: \\'grid\\',' + '\\n' +\r\n      '    grid: \\'auto / auto auto auto\\',' + '\\n' +\r\n      '    gridGap: 3' + '\\n' +\r\n      '  };' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <div style={containerStyle}>' + '\\n' +\r\n      '      <MidlaneKnob scale={0.5} defaultValue={0.3} />' + '\\n' +\r\n      '      <ConcentricKnob scale={0.5} defaultValue={0.5} />' + '\\n' +\r\n      '      <BlindfoldKnob scale={0.5} defaultValue={0.7} />' + '\\n' +\r\n      '    </div>' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    Component: () => {\r\n      const containerStyle = {\r\n        display: 'grid',\r\n        grid: 'auto / auto auto auto',\r\n        gridGap: 3\r\n      };\r\n      return (\r\n        <div style={containerStyle}>\r\n          <MidlaneKnob scale={0.5} defaultValue={0.3} />\r\n          <ConcentricKnob scale={0.5} defaultValue={0.5} />\r\n          <BlindfoldKnob scale={0.5} defaultValue={0.7} />\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    code:\r\n      '// An ultimate example' + '\\n' +\r\n      'function ExampleKnob() {' + '\\n' +\r\n      '  const theme = useContext(ThemeContext);' + '\\n' +\r\n      '  const [knobStrokeWidth, setKnobStrokeWidth] = useState(0.5);' + '\\n' +\r\n      '  const [valueStrokeWidth, setValueStrokeWidth] = useState(0.5);' + '\\n' +\r\n      '  const [red, setRed] = useState(0.5);' + '\\n' +\r\n      '  const [green, setGreen] = useState(0.5);' + '\\n' +\r\n      '  const [blue, setBlue] = useState(0.5);' + '\\n' +\r\n      '  const themeWithValueStrokeColor = ([r, g, b], theme) => ({' + '\\n' +\r\n      '    ...theme,' + '\\n' +\r\n      '    valueStrokeColor: `rgb(${r * 255}, ${g * 255}, ${b * 255})`,' + '\\n' +\r\n      '  });' + '\\n' +\r\n      '  const customizedTheme = themeWithValueStrokeColor([red, green, blue], {' + '\\n' +\r\n      '    ...theme,' + '\\n' +\r\n      '    knobStrokeWidth: 6 + 12 * knobStrokeWidth,' + '\\n' +\r\n      '    valueStrokeWidth: 3 + 6 * valueStrokeWidth,' + '\\n' +\r\n      '  });' + '\\n' +\r\n      '  const containerStyle = {' + '\\n' +\r\n      '    display: \\'grid\\',' + '\\n' +\r\n      '    gridTemplateAreas:' + '\\n' +\r\n      '      \\'\". k   k   k   k   k   k   .\"\\' + \\'\\\\n\\' +' + '\\n' +\r\n      '      \\'\". ksw ksw ksw vsw vsw vsw .\"\\' + \\'\\\\n\\' +' + '\\n' +\r\n      '      \\'\". r   r   g   g   b   b   .\"\\' + \\'\\\\n\\',' + '\\n' +\r\n      '    gridGap: 8' + '\\n' +\r\n      '  };' + '\\n' +\r\n      '  return (' + '\\n' +\r\n      '    <div style={containerStyle}>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'k\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={customizedTheme}>' + '\\n' +\r\n      '          <MidlaneKnob defaultValue={0.5} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'ksw\\' }}>' + '\\n' +\r\n      '        <BlindfoldKnob title=\"Knob Stroke\" scale={0.5} value={knobStrokeWidth} onChange={setKnobStrokeWidth} />' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'vsw\\' }}>' + '\\n' +\r\n      '        <BlindfoldKnob title=\"Value Stroke\" scale={0.5} value={valueStrokeWidth} onChange={setValueStrokeWidth} />' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'r\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={themeWithValueStrokeColor([0.5 + 0.5 * red, 0, 0], theme)}>' + '\\n' +\r\n      '          <FullonKnob title=\"R\" scale={0.33} value={red} onChange={setRed} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'g\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0.5 + 0.5 * green, 0], theme)}>' + '\\n' +\r\n      '          <FullonKnob title=\"G\" scale={0.33} value={green} onChange={setGreen} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '      <div style={{ gridArea: \\'b\\' }}>' + '\\n' +\r\n      '        <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0, 0.5 + 0.5 * blue], theme)}>' + '\\n' +\r\n      '          <FullonKnob title=\"B\" scale={0.33} value={blue} onChange={setBlue} />' + '\\n' +\r\n      '        </ThemeContext.Provider>' + '\\n' +\r\n      '      </div>' + '\\n' +\r\n      '    </div>' + '\\n' +\r\n      '  );' + '\\n' +\r\n      '}',\r\n    codeFontSize: 12,\r\n    Component: () => {\r\n      const theme = useContext(ThemeContext);\r\n      const [knobStrokeWidth, setKnobStrokeWidth] = useState(0.5);\r\n      const [valueStrokeWidth, setValueStrokeWidth] = useState(0.5);\r\n      const [red, setRed] = useState(0.5);\r\n      const [green, setGreen] = useState(0.5);\r\n      const [blue, setBlue] = useState(0.5);\r\n      const themeWithValueStrokeColor = ([r, g, b], theme) => ({\r\n        ...theme,\r\n        valueStrokeColor: `rgb(${r * 255}, ${g * 255}, ${b * 255})`,\r\n      });\r\n      const customizedTheme = themeWithValueStrokeColor([red, green, blue], {\r\n        ...theme,\r\n        knobStrokeWidth: 6 + 12 * knobStrokeWidth,\r\n        valueStrokeWidth: 3 + 6 * valueStrokeWidth,\r\n      });\r\n      const containerStyle = {\r\n        display: 'grid',\r\n        gridTemplateAreas:\r\n          '\". k   k   k   k   k   k   .\"' + '\\n' +\r\n          '\". ksw ksw ksw vsw vsw vsw .\"' + '\\n' +\r\n          '\". r   r   g   g   b   b   .\"' + '\\n',\r\n        gridGap: 8\r\n      };\r\n      return (\r\n        <div style={containerStyle}>\r\n          <div style={{ gridArea: 'k' }}>\r\n            <ThemeContext.Provider value={customizedTheme}>\r\n              <MidlaneKnob defaultValue={0.5} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n          <div style={{ gridArea: 'ksw' }}>\r\n            <BlindfoldKnob title=\"Knob Stroke\" scale={0.5} value={knobStrokeWidth} onChange={setKnobStrokeWidth} />\r\n          </div>\r\n          <div style={{ gridArea: 'vsw' }}>\r\n            <BlindfoldKnob title=\"Value Stroke\" scale={0.5} value={valueStrokeWidth} onChange={setValueStrokeWidth} />\r\n          </div>\r\n          <div style={{ gridArea: 'r' }}>\r\n            <ThemeContext.Provider value={themeWithValueStrokeColor([0.5 + 0.5 * red, 0, 0], theme)}>\r\n              <FullonKnob title=\"R\" scale={0.33} value={red} onChange={setRed} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n          <div style={{ gridArea: 'g' }}>\r\n            <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0.5 + 0.5 * green, 0], theme)}>\r\n              <FullonKnob title=\"G\" scale={0.33} value={green} onChange={setGreen} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n          <div style={{ gridArea: 'b' }}>\r\n            <ThemeContext.Provider value={themeWithValueStrokeColor([0, 0, 0.5 + 0.5 * blue], theme)}>\r\n              <FullonKnob title=\"B\" scale={0.33} value={blue} onChange={setBlue} />\r\n            </ThemeContext.Provider>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport { FullonKnob, MidlaneKnob, ConcentricKnob, BlindfoldKnob } from 'react-knobs';\r\nimport examples from './examples';\r\nimport useEventListener from './utils/useEventListener';\r\n\r\nconst KNOB_PRESETS = [\r\n  { Component: FullonKnob, title: 'Fb', valueStrokeColors: ['#669EFF', '#4580E6', '#2965CC'], strokeLineCap: 'butt' },\r\n  { Component: FullonKnob, title: 'Fr', valueStrokeColors: ['#AD99FF', '#9179F2', '#7157D9'], strokeLineCap: 'round' },\r\n  { Component: MidlaneKnob, title: 'Mb', valueStrokeColors: ['#FFC940', '#F2B824', '#D99E0B'], strokeLineCap: 'butt' },\r\n  { Component: MidlaneKnob, title: 'Mr', valueStrokeColors: ['#D1F26D', '#B6D94C', '#9BBF30'], strokeLineCap: 'round' },\r\n  { Component: ConcentricKnob, title: 'Co', valueStrokeColors: ['#2EE6D6', '#14CCBD', '#00B3A4'], },\r\n  { Component: BlindfoldKnob, title: 'Bl', valueStrokeColors: ['#FFC940', '#F2B824', '#D99E0B'], },\r\n];\r\n\r\nconst AppContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 800px auto;\r\n  grid-template-rows: 100px auto 60px;\r\n  grid-template-areas:\r\n    \". header .\"\r\n    \". main   .\"\r\n    \". footer .\";\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #193540;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n`;\r\n\r\nconst AppHeader = styled.header`\r\n  grid-area: header;\r\n  align-self: end;\r\n  font-size: 20pt;\r\n  padding-bottom: 10pt;\r\n  color: #5F7884;\r\n`;\r\n\r\nconst AppBody = styled.div`\r\n  display: grid;\r\n  grid: 32pt auto / 100%;\r\n  grid-area: main;\r\n  background-color: #899EAA;\r\n  overflow-y: hidden;\r\n  height: 100%;\r\n`;\r\n\r\nconst AppFooter = styled.footer`\r\n  grid-area: footer;\r\n  text-align: center;\r\n  font-size: 14pt;\r\n  padding-top: 8pt;\r\n  color: #405D64;\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  display: grid;\r\n  grid: 32pt / 50% 50%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14pt;\r\n  color: #899EAA;\r\n  background-color: #405D64;\r\n  ${props => props.active && css`\r\n    color: #193540;\r\n    background-color: #5F7884;\r\n    text-decoration: underline;\r\n  `}\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #193540;\r\n  }\r\n`;\r\n\r\nconst KnobsContainer = styled.div`\r\n  display: ${props => props.visible ? 'grid' : 'none'};\r\n  grid: 33% 33% 33% / 50% 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 60px;\r\n  box-sizing: border-box;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst KnobsGroup = styled.div`\r\n  display: grid;\r\n  grid: auto / auto auto auto auto;\r\n  grid-gap: 5px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ExamplesContainer = styled.div`\r\n  display: ${props => props.visible ? 'grid' : 'none'};\r\n  grid: auto / 240px 500px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  pre {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst Centered = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function () {\r\n  const [activeTab, setActiveTab] = useState('quick-demo');\r\n  const [knobValues, setKnobValues] = useState(\r\n    Array.from({ length: KNOB_PRESETS.length }, () => Math.random())\r\n  );\r\n\r\n  useEventListener('keydown', (event) => {\r\n    if (event.keyCode === 9) { // TAB\r\n      event.preventDefault();\r\n      setActiveTab(\r\n        activeTab === 'quick-demo'\r\n          ? 'code-examples'\r\n          : 'quick-demo'\r\n      );\r\n    }\r\n  });\r\n\r\n  const handleKnobProgressChange = (index, value) => {\r\n    const newKnobValues = [...knobValues];\r\n    newKnobValues[index] = value;\r\n    setKnobValues(newKnobValues);\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <AppHeader>\r\n        react-knobs-demo\r\n      </AppHeader>\r\n      <AppBody>\r\n        <TabsContainer>\r\n          <Tab\r\n            active={activeTab === 'quick-demo'}\r\n            onClick={() => setActiveTab('quick-demo')}\r\n          >\r\n            Quick Demo\r\n          </Tab>\r\n          <Tab\r\n            active={activeTab === 'code-examples'}\r\n            onClick={() => setActiveTab('code-examples')}\r\n          >\r\n            Code Examples\r\n          </Tab>\r\n        </TabsContainer>\r\n        <KnobsContainer visible={activeTab === 'quick-demo'}>\r\n          {KNOB_PRESETS.map(({ Component, valueStrokeColors, ...props }, i) => (\r\n            <KnobsGroup key={i}>\r\n              {[0.33, 0.66, 1].map((scale, j) => (\r\n                <Component\r\n                  key={j}\r\n                  {...props}\r\n                  scale={scale}\r\n                  valueStrokeColor={valueStrokeColors[j]}\r\n                  value={knobValues[i]}\r\n                  onChange={(value) => handleKnobProgressChange(i, value)}\r\n                />)\r\n              )}\r\n            </KnobsGroup>\r\n          ))}\r\n        </KnobsContainer>\r\n        <ExamplesContainer visible={activeTab === 'code-examples'}>\r\n          {examples.map(({ code, codeFontSize, Component }, index) => (\r\n            <React.Fragment key={index}>\r\n              <Centered>\r\n                <Component />\r\n              </Centered>\r\n              <div style={{ fontSize: codeFontSize || 14 }}>\r\n                <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n                  {code}\r\n                </SyntaxHighlighter>\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n        </ExamplesContainer>\r\n      </AppBody>\r\n      <AppFooter>\r\n        Andrii Polishchuk (c) 2019\r\n      </AppFooter>\r\n    </AppContainer>\r\n  );\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App.jsx'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useEventListener(eventName, handler, element = window) {\r\n  const savedHandler = useRef();\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n  useEffect(() => {\r\n    const isSupported = element && element.addEventListener;\r\n    if (!isSupported) return;\r\n    const eventListener = event => savedHandler.current(event);\r\n    element.addEventListener(eventName, eventListener);\r\n    return () => {\r\n      element.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element]);\r\n};\r\n"],"sourceRoot":""}